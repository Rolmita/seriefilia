// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// datasource db {
//   provider  = "mysql"
//   url  	    = env("DATABASE_URL")
// }

model User {
  id            String    @id @default(cuid())
  name          String
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          String?   @default("USER") // o  ADMIN
  accounts      Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Serie {
  id           Int      @id @default(autoincrement())
  nombre       String
  temporadas   Int
  estado       String
  inicio       String?
  final        String?
  valoracion   Decimal?
  valoraciones Json?
  posts        Post[]

  @@map("series")
}

model Post {
  id          Int          @id @default(autoincrement())
  nombre      String
  serie       Serie?       @relation(fields: [serieId], references: [id])
  serieId     Int?
  descripcion String
  creado      DateTime     @default(now())
  actualizado DateTime     @updatedAt
  comentarios Comentario[]

  @@map("posts")
}

model Comentario {
  id          Int      @id @default(autoincrement())
  autor     String?
  post        Post     @relation(fields: [postId], references: [id])
  postId      Int
  descripcion String
  creado      DateTime @default(now())

  @@map("comentarios")
}
